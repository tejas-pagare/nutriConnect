<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nutrition Chatbot</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        :root {
            --primary-color: #28a745;
            --secondary-color: #f9e1a7;
            --text-color: #2d2d2d;
            --light-bg: #f5f9ed;
            --white: #ffffff;
            --shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            --border-radius: 12px;
            --transition: all 0.3s ease-in-out;
        }

        body {
            background: linear-gradient(to bottom, var(--light-bg), #e8f5e9);
            font-family: 'Poppins', Arial, sans-serif;
            margin: 0;
            padding: 0;
            color: var(--text-color);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .chat-container {
            width: 90%;
            max-width: 1000px;
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            display: flex;
            flex-direction: column;
            height: 80vh;
            margin: 20px;
        }

        .chat-header {
            background: var(--primary-color);
            color: var(--white);
            padding: 1rem 1.5rem;
            font-size: 1.5rem;
            font-weight: 600;
            text-align: center;
            position: relative;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .chat-box {
            flex: 1;
            padding: 1.5rem;
            overflow-y: auto;
            background: #f9fbfc;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .bot-message,
        .user-message {
            max-width: 80%;
            padding: 0.75rem 1rem;
            border-radius: var(--border-radius);
            position: relative;
            line-height: 1.5;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .bot-message {
            background: #e8f5e9;
            align-self: flex-start;
            border-bottom-left-radius: 0;
        }

        .user-message {
            background: var(--primary-color);
            color: var(--white);
            align-self: flex-end;
            border-bottom-right-radius: 0;
        }

        .message-content {
            flex: 1;
        }

        .message-time {
            font-size: 0.75rem;
            color: #666;
            margin-top: 0.25rem;
            opacity: 0.8;
        }

        .user-message .message-time {
            color: #d1e7dd;
        }

        .copy-btn {
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            font-size: 0.9rem;
            margin-left: 0.5rem;
            transition: var(--transition);
        }

        .copy-btn:hover {
            color: var(--primary-color);
        }

        .user-message .copy-btn {
            color: #d1e7dd;
        }

        .user-message .copy-btn:hover {
            color: #fff;
        }

        .typing-indicator {
            align-self: flex-start;
            color: #666;
            font-style: italic;
            font-size: 0.9rem;
            display: none;
        }

        .typing-indicator .dot {
            animation: blink 1.5s infinite;
        }

        .typing-indicator .dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-indicator .dot:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes blink {
            0%, 20%, 50%, 80%, 100% {
                opacity: 1;
            }
            40%, 60% {
                opacity: 0.3;
            }
        }

        .suggested-questions {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            padding: 1rem;
            background: #f1f3f5;
            border-top: 1px solid #e0e6e9;
        }

        .suggested-question {
            background: var(--primary-color);
            color: var(--white);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .suggested-question:hover {
            background: #218838;
            transform: translateY(-2px);
        }

        .chat-input {
            display: flex;
            padding: 1rem;
            background: var(--white);
            border-top: 1px solid #e0e6e9;
            align-items: center;
        }

        #user-input {
            flex: 1;
            padding: 0.75rem;
            border: 1px solid #e0e6e9;
            border-radius: 20px;
            font-size: 1rem;
            outline: none;
            transition: var(--transition);
        }

        #user-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 5px rgba(40, 167, 69, 0.2);
        }

        #send-btn {
            margin-left: 1rem;
            padding: 0.75rem 1.5rem;
            background: var(--primary-color);
            color: var(--white);
            border: none;
            border-radius: 20px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #send-btn:hover {
            background: #218838;
            transform: translateY(-2px);
        }

        #send-btn:disabled {
            background: #cccccc;
            cursor: not-allowed;
        }

        .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 3px solid #ffffff;
            border-top: 3px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 0.5rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        #clear-btn {
            background: #dc3545;
            color: var(--white);
            border: none;
            border-radius: 20px;
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
            cursor: pointer;
            transition: var(--transition);
            margin-left: 0.5rem;
        }

        #clear-btn:hover {
            background: #c82333;
            transform: translateY(-2px);
        }

        #cross {
            position: fixed;
            top: 5px;
            left: 10px;
            line-height: 20px;
            font-size: 40px;
            border-radius: 100%;
        }

        @media (max-width: 480px) {
            .chat-container {
                width: 95%;
                height: 90vh;
                margin: 10px;
            }

            .chat-header {
                font-size: 1.25rem;
                padding: 1rem;
            }

            #cross {
                top: 10px;
                left: 10px;
                width: 36px;
                height: 36px;
                font-size: 1.5rem;
            }

            .suggested-question {
                font-size: 0.8rem;
                padding: 0.4rem 0.8rem;
            }
        }
    </style>
</head>
<body>
    <!-- Back Button -->
    <div id="cross" class="btn btn-outline-success" onclick="window.history.back();">
        <i class="fa-solid fa-xmark"></i>
    </div>

    <div class="chat-container">
        <div class="chat-header">
            ðŸ¥— Nutrition Chatbot
        </div>
        <div class="chat-box" id="chat-box">
            <div class="bot-message">
                <span class="message-content">ðŸ‘‹ Hello! How can I assist with your nutrition today?</span>
                <div class="message-time" id="initial-time"></div>
            </div>
        </div>
        <div class="suggested-questions" id="suggested-questions">
            <span class="suggested-question" onclick="sendSuggestedQuestion('What is a balanced diet?')">What is a balanced diet?</span>
            <span class="suggested-question" onclick="sendSuggestedQuestion('How many calories should I eat daily?')">How many calories should I eat daily?</span>
            <span class="suggested-question" onclick="sendSuggestedQuestion('What are good sources of protein?')">What are good sources of protein?</span>
            <span class="suggested-question" onclick="sendSuggestedQuestion('How can I reduce sugar intake?')">How can I reduce sugar intake?</span>
        </div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Type your message...">
            <button id="send-btn"><span class="spinner"></span>Send</button>
            <button id="clear-btn">Clear Chat</button>
        </div>
    </div>

    <script>
        // Function to format the current time
        function getCurrentTime() {
            const now = new Date();
            return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        }

        // Set initial message time
        document.getElementById('initial-time').textContent = getCurrentTime();

        const chatBox = document.getElementById('chat-box');
        const userInput = document.getElementById('user-input');
        const sendBtn = document.getElementById('send-btn');
        const clearBtn = document.getElementById('clear-btn');
        const spinner = sendBtn.querySelector('.spinner');

        // Add typing indicator element
        const typingIndicator = document.createElement('div');
        typingIndicator.className = 'typing-indicator';
        typingIndicator.innerHTML = 'Bot is typing<span class="dot">.</span><span class="dot">.</span><span class="dot">.</span>';
        chatBox.appendChild(typingIndicator);

        // Function to add a message to the chat
        function addMessage(content, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.className = isUser ? 'user-message' : 'bot-message';
            messageDiv.innerHTML = `
                <span class="message-content">${content}</span>
                <div class="message-time">${getCurrentTime()}</div>
                ${!isUser ? '<button class="copy-btn" onclick="copyToClipboard(this.parentElement.querySelector(\'.message-content\').textContent)"><i class="fas fa-copy"></i></button>' : ''}
            `;
            chatBox.appendChild(messageDiv);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Function to copy text to clipboard
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                alert('Response copied to clipboard!');
            }).catch(err => {
                console.error('Failed to copy text:', err);
            });
        }

        // Function to fetch response from the server
        async function getBotResponse(message) {
            try {
                const response = await fetch('/chatbot/ask', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message })
                });
                const data = await response.json();
                return data.reply;
            } catch (error) {
                console.error('Error fetching bot response:', error);
                return 'Sorry, something went wrong. Please try again!';
            }
        }

        // Function to handle sending a message
        async function sendMessage(message) {
            if (!message) return;

            addMessage(message, true);
            userInput.value = '';

            // Show typing indicator and disable send button
            typingIndicator.style.display = 'block';
            sendBtn.disabled = true;
            spinner.style.display = 'inline-block';
            chatBox.scrollTop = chatBox.scrollHeight;

            const reply = await getBotResponse(message);

            // Hide typing indicator and re-enable send button
            typingIndicator.style.display = 'none';
            sendBtn.disabled = false;
            spinner.style.display = 'none';

            addMessage(reply);
        }

        // Handle sending a message
        async function handleSendMessage() {
            const message = userInput.value.trim();
            if (!message) return;
            await sendMessage(message);
        }

        // Send suggested question
        async function sendSuggestedQuestion(question) {
            userInput.value = question;
            await sendMessage(question);
        }

        // Clear chat
        function clearChat() {
            chatBox.innerHTML = `
                <div class="bot-message">
                    <span class="message-content">ðŸ‘‹ Hello! How can I assist with your nutrition today?</span>
                    <div class="message-time">${getCurrentTime()}</div>
                </div>
            `;
            chatBox.appendChild(typingIndicator);
        }

        // Send message on button click
        sendBtn.addEventListener('click', handleSendMessage);

        // Send message on Enter key press
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') handleSendMessage();
        });

        // Clear chat on button click
        clearBtn.addEventListener('click', clearChat);
    </script>
</body>
</html>